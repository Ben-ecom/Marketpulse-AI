name: Development CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies (Frontend)
        run: |
          cd frontend
          npm ci
      
      - name: Lint Frontend
        run: |
          cd frontend
          npm run lint
      
      - name: Install dependencies (Backend)
        run: |
          cd backend
          npm ci
      
      - name: Lint Backend
        run: |
          cd backend
          npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: marketpulse_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies (Frontend)
        run: |
          cd frontend
          npm ci
      
      - name: Run Frontend Tests
        run: |
          cd frontend
          npm test
      
      - name: Install dependencies (Backend)
        run: |
          cd backend
          npm ci
      
      - name: Run Backend Tests
        run: |
          cd backend
          npm test
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: marketpulse_test
          JWT_SECRET: test_secret_key

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies (Frontend)
        run: |
          cd frontend
          npm ci
      
      - name: Build Frontend
        run: |
          cd frontend
          npm run build
      
      - name: Install dependencies (Backend)
        run: |
          cd backend
          npm ci
      
      - name: Build Backend
        run: |
          cd backend
          npm run build
      
      - name: Upload Frontend Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist
      
      - name: Upload Backend Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend/dist

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download Frontend Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist
      
      - name: Download Backend Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: backend-build
          path: backend/dist
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./docker/production/frontend.Dockerfile
          push: true
          tags: marketpulseai/frontend:dev
      
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./docker/production/backend.Dockerfile
          push: true
          tags: marketpulseai/backend:dev
      
      - name: Deploy to Development Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USERNAME }}
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          script: |
            cd /opt/marketpulse-ai
            docker-compose -f docker/docker-compose.yml -f docker/development/docker-compose.dev.yml pull
            docker-compose -f docker/docker-compose.yml -f docker/development/docker-compose.dev.yml up -d
            docker system prune -af
